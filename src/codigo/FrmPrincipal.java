/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Kevin Mart√≠nez
 */
public class FrmPrincipal extends javax.swing.JFrame {
    JFileChooser seleccionar = new JFileChooser();
    File archivo;
    FileInputStream entrada;
    FileOutputStream salida;

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
                       
    }

    public String AbrirArchivo (File archivo){
    
    String documento = "";
    try {
    entrada = new FileInputStream (archivo);
    int ascci;
    while((ascci=entrada.read())!=-1){
    char caracter = (char)ascci;
    documento += caracter;
        } 
    } catch(Exception ex){
    
    }  
        return documento;
    }
    
    public String GuardarArchivo (File archivo, String documento){
    
        String mensaje = null;
       try{
       
           salida = new FileOutputStream(archivo);
           byte [] bytxt = documento.getBytes();
           salida.write(bytxt);
           mensaje = "Archivo Guardado";
           
       }catch(Exception ex){
           
           
       }
        return mensaje;
    }       
        
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEntrada = new javax.swing.JTextField();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu_Abrir = new javax.swing.JMenuItem();
        jMenu_Guardar = new javax.swing.JMenuItem();
        jMenu_GuardarComo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu_Copiar = new javax.swing.JMenuItem();
        jMenu_Cortar = new javax.swing.JMenuItem();
        jMenu_Pegar = new javax.swing.JMenuItem();
        jMenu_Buscar = new javax.swing.JMenuItem();
        jMenu_Reemplazar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtEntrada.setFont(new java.awt.Font("Microsoft JhengHei Light", 3, 18)); // NOI18N

        btnAnalizar.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane1.setViewportView(txtResultado);

        btnLimpiar.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenu_Abrir.setText("Abrir");
        jMenu_Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_AbrirActionPerformed(evt);
            }
        });
        jMenu1.add(jMenu_Abrir);

        jMenu_Guardar.setText("Guardar");
        jMenu_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_GuardarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenu_Guardar);

        jMenu_GuardarComo.setText("Guardar como");
        jMenu_GuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_GuardarComoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenu_GuardarComo);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenu_Copiar.setText("Copiar");
        jMenu_Copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_CopiarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenu_Copiar);

        jMenu_Cortar.setText("Cortar");
        jMenu_Cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_CortarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenu_Cortar);

        jMenu_Pegar.setText("Pegar");
        jMenu_Pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_PegarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenu_Pegar);

        jMenu_Buscar.setText("Buscar");
        jMenu_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_BuscarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenu_Buscar);

        jMenu_Reemplazar.setText("Reemplazar");
        jMenu2.add(jMenu_Reemplazar);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(btnAnalizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        // TODO add your handling code here:
        File archivo = new File("archivo.txt");
        PrintWriter escribir;
        try {
            escribir = new PrintWriter(archivo);
            escribir.print(txtEntrada.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            Reader lector = new BufferedReader(new FileReader("archivo.txt"));
            Lexer lexer = new Lexer(lector);
            String resultado = "";
            while (true) {
                Tokens tokens = lexer.yylex();
                if (tokens == null) {
                    resultado += "FIN";
                    txtResultado.setText(resultado);
                    return;
                }
                switch (tokens) {
                    case ERROR:
                        resultado += "Simbolo no definido\n";
                        break;
                    case Identificador: case Numero: case Reservadas:
                        resultado += lexer.lexeme + ": Es un " + tokens + "\n";
                        break;
                    default:
                        resultado += "Token: " + tokens + "\n";
                        break;
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnalizarActionPerformed

    private void jMenu_PegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_PegarActionPerformed
        // TODO add your handling code here:
        txtEntrada.paste();
        txtResultado.paste();
    }//GEN-LAST:event_jMenu_PegarActionPerformed

    private void jMenu_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_BuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu_BuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        
        txtEntrada.setText(" ");
        txtResultado.setText(" ");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jMenu_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_GuardarActionPerformed
        // TODO add your handling code here:
        
        if(seleccionar.showDialog(null, "Guardar")==JFileChooser.APPROVE_OPTION){
        archivo = seleccionar.getSelectedFile();
        if(archivo.getName().endsWith("txt")){
        String documento = txtResultado.getText();
        String mensaje = GuardarArchivo(archivo, documento);
        if(mensaje != null){
        JOptionPane.showMessageDialog(null, mensaje);
        }else{
            JOptionPane.showMessageDialog(null, "Archivo no compatible");
        }
        }else{
            JOptionPane.showMessageDialog(null, "Guardar Documento de Texto");
        }
        }
        
    }//GEN-LAST:event_jMenu_GuardarActionPerformed

    private void jMenu_AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_AbrirActionPerformed
        // TODO add your handling code here:
        
        if (seleccionar.showDialog(null, "Abrir")==JFileChooser.APPROVE_OPTION){
        archivo = seleccionar.getSelectedFile();
        if(archivo.canRead()){
        if(archivo.getName().endsWith("txt")){
        String documento = AbrirArchivo(archivo);
        txtEntrada.setText(documento);
        txtResultado.setText(documento);
        
        }else{
            JOptionPane.showMessageDialog(null, "Archivo no compatible");
        }
        }
        }
    }//GEN-LAST:event_jMenu_AbrirActionPerformed

    private void jMenu_GuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_GuardarComoActionPerformed
        // TODO add your handling code here:
        
        if(seleccionar.showDialog(null, "Guardar")==JFileChooser.APPROVE_OPTION){
        archivo = seleccionar.getSelectedFile();
        if(archivo.getName().endsWith("txt")){
        String documento = txtResultado.getText();
        String mensaje = GuardarArchivo(archivo, documento);
        if(mensaje != null){
        JOptionPane.showMessageDialog(null, mensaje);
        }else{
            JOptionPane.showMessageDialog(null, "Archivo no compatible");
        }
        }else{
            JOptionPane.showMessageDialog(null, "Guardar Documento de Texto");
        }
        }
    }//GEN-LAST:event_jMenu_GuardarComoActionPerformed

    private void jMenu_CopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_CopiarActionPerformed
        // TODO add your handling code here:
        txtEntrada.copy();
        txtResultado.copy();
    }//GEN-LAST:event_jMenu_CopiarActionPerformed

    private void jMenu_CortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_CortarActionPerformed
        // TODO add your handling code here:
        txtEntrada.cut();
        txtResultado.cut();
    }//GEN-LAST:event_jMenu_CortarActionPerformed

    /**
     * @param args the command line arguments
     */
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenu_Abrir;
    private javax.swing.JMenuItem jMenu_Buscar;
    private javax.swing.JMenuItem jMenu_Copiar;
    private javax.swing.JMenuItem jMenu_Cortar;
    private javax.swing.JMenuItem jMenu_Guardar;
    private javax.swing.JMenuItem jMenu_GuardarComo;
    private javax.swing.JMenuItem jMenu_Pegar;
    private javax.swing.JMenuItem jMenu_Reemplazar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtEntrada;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
